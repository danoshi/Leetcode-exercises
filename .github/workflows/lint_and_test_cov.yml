name: Combined Actions

on:
  pull_request:
    types:
      - opened
      - synchronize # Consider running on updates to PR as well

jobs:
  lint_and_update_pr:
    name: Lint and Update PR
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }} # Checkout the PR branch
          token: ${{ secrets.GITHUB_TOKEN }} # Ensure you have push access

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Install Python dependencies
        run: |
          pip install black
          pip install pytest
          pip install pytest-cov

      - name: Auto-format code with black and commit changes
        run: |
          black . || true  # Format code, but don't fail the job if formatting made changes
          if [ -n "$(git status --porcelain)" ]; then  # Check if there are changes
            git config user.name 'github-actions[bot]'
            git config user.email 'github-actions[bot]@users.noreply.github.com'
            git add .
            git commit -m "Apply auto-formatting with black"
            git push
          else
            echo "No changes made by black."
          fi

      - name: Run pytest and generate report
        run: |
          python -m pytest --cov=frontendmasters --cov=ArrayExercise --cov=MathExercise --cov=Sorting_and_Searching_Exercise --cov=StringExercise --cov-report=term --cov-report=xml > test_data/pytest-coverage.txt

      - name: Pytest coverage comment
        id: coverageComment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          hide-comment: true
          pytest-coverage-path: ./test_data/pytest-coverage.txt

      - name: Update Readme with Coverage
        run: |
          sed -i '/<!-- Pytest Coverage Comment:Begin -->/,/<!-- Pytest Coverage Comment:End -->/c\<!-- Pytest Coverage Comment:Begin -->\n${{ steps.coverageComment.outputs.coverageHtml }}\n<!-- Pytest Coverage Comment:End -->' ./README.md

          # Check if there are any changes
          if git diff --quiet README.md; then
              echo "No changes to README.md. Skipping commit."
          else
              git config --global user.name 'github-actions[bot]'
              git config --global user.email 'github-actions[bot]@users.noreply.github.com'
              git add README.md

              # Commit and push only if there were changes
              git commit -m "Update README with coverage report"
              git push
          fi
